@model Project0.WebApp.Models.OrderMaster

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>OrderMaster</h4>
<hr />
<form asp-action="Create">
    <div class="row">
        <div class="col-md-4">

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Order.User.UserId" class="control-label"></label>
                @Html.DropDownListFor(model => model.Order.User.UserId,
        new SelectList(Model.Users, "User.UserId", "FullName"), "Select User", "form-control")
                @*
        <input asp-for="Order.User.UserId" class="form-control" hidden="hidden" />
        @Html.DisplayFor(model => model.Order.User.FirstName)
        @(" ")
        @Html.DisplayFor(model => model.Order.User.LastName)
                *@

                @*(IEnumerable items, string dataValueField, string dataTextField)*@

                @*
                    <p>@( Model.Order.User.FirstName + " " + Model.Order.User.LastName)</p>
                    <input asp-for="Order." class="form-control" readonly="readonly" />
                    @Html.DropDownListFor(model => model.Order.User.UserId,
        new SelectList(Model.Users, "User.UserId", "FullName"), "Select User", "form-control")
                *@
            </div>

            <div class="form-group">
                <label asp-for="Order.Location" class="control-label"></label>
                @Html.DropDownListFor(model => model.Order.Location.LocationId,
               new SelectList(Model.Locations,"LocationId","Name"), "Default", "form-control")
            </div>
            <div class="form-group">
                <label asp-for="Order.OrderTime" class="control-label"></label>
                <input asp-for="Order.OrderTime" class="form-control" />
                <span asp-validation-for="Order.OrderTime" class="text-danger"></span>
            </div>


        @if (Model.Favorite != null)
        {
            <h6>
                @Html.DisplayFor(model => model.Favorite.User.FirstName)  @(" ")  @(Html.DisplayFor(model => model.Favorite.User.LastName))
            </h6>

            <h6>
                @(Html.DisplayFor(model => model.Favorite.Location.Name))
            </h6>

            <h6>
                @{bool comma = false;}
                @foreach (var pair in Model.Favorite.Contents)
                {
                    @if (comma)
                    {
                        @(", ")
                    }
                    @Html.DisplayFor(model => pair.Key.Name)@(" - ")
                    @Html.DisplayFor(model => pair.Value)
                    comma = true;
                }
            </h6>

            <h6>
                @("$ ")  @Html.DisplayFor(model => model.Favorite.Price)
            </h6>
            @Html.ActionLink("Order Favorite", "Create", new OrderMaster { Order = Model.Favorite, Locations = Model.Locations, Pizzas = Model.Pizzas, Users = Model.Users, Favorite = Model.Favorite })
                    }

        </div>
        <div class="col-md-4">
            <div class="form-group">
                <label asp-for="Pizzas" class="control-label"></label>
                <ul>
                    @for (int i = 0; i < Model.Pizzas.Count; i++)
                    {
                        <li>
                            <label asp-for="@Model.Pizzas[i]"> @(Model.Pizzas[i].Pizza.Name + ", $" + Model.Pizzas[i].Pizza.Price) </label>
                            <input asp-for="@Model.Pizzas[i].Quantity" />

                            <input type="hidden" asp-for="@Model.Pizzas[i].Pizza.PizzaId" />
                            <input type="hidden" asp-for="@Model.Pizzas[i].Pizza.Name" />

                        </li>
                    }
                </ul>
                <span asp-validation-for="Order.Contents" class="text-danger"></span>
            </div>






        </div>
    </div>
    @if (!ViewData.ModelState.IsValid)
    {
        <span class="field-validation-error">@ViewData.ModelState["Order"].Errors[0].ErrorMessage</span>
    }


    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
